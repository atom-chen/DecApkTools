local ItemInfoManager = require("app.info.ItemInfoManager")
local UserDataManager = require("app.UserDataManager")
local ActivityDataManager = require("app.ActivityDataManager")
local TDHttpRequest = require("app.net.TDHttpRequest")
local MonthCardActivity = class("MonthCardActivity", function()
  return cc.uiloader:load("CCS/activities/MonthCard.csb")
end)
function MonthCardActivity:ctor(data)
  self:InitUI()
  self:setNodeEventEnabled(true)
end
function MonthCardActivity:onEnter()
  local eventDsp = self:getEventDispatcher()
  self.customListener = cc.EventListenerCustom:create(td.TOTAL_CHARGE_CHANGE, function()
    local vipData = UserDataManager:GetInstance():GetVIPData()
    self.m_weekRemainDay:setString(vipData.week_day)
    self.m_monthRemainDay:setString(vipData.month_day)
  end)
  eventDsp:addEventListenerWithFixedPriority(self.customListener, 1)
end
function MonthCardActivity:onExit()
  local eventDsp = self:getEventDispatcher()
  eventDsp:removeEventListener(self.customListener)
end
function MonthCardActivity:InitUI()
  self:setContentSize(display.width, display.height)
  ccui.Helper:doLayout(self)
  self.m_bg = cc.uiloader:seekNodeByName(self, "Image_bg")
  self.m_buy1Btn = cc.uiloader:seekNodeByName(self.m_bg, "Button_buy1")
  td.BtnAddTouch(self.m_buy1Btn, function()
    UserDataManager:GetInstance():GetTradeIdRequest(7, td.PayType.Prop)
  end, nil, td.ButtonEffectType.Short)
  self.m_buy2Btn = cc.uiloader:seekNodeByName(self.m_bg, "Button_buy2")
  td.BtnAddTouch(self.m_buy2Btn, function()
    UserDataManager:GetInstance():GetTradeIdRequest(30, td.PayType.Prop)
  end, nil, td.ButtonEffectType.Short)
  local vipData = UserDataManager:GetInstance():GetVIPData()
  self.m_weekRemainDay = cc.uiloader:seekNodeByName(self.m_bg, "Text_remain1")
  self.m_weekRemainDay:setString(vipData.week_day)
  self.m_monthRemainDay = cc.uiloader:seekNodeByName(self.m_bg, "Text_remain2")
  self.m_monthRemainDay:setString(vipData.month_day)
end
return MonthCardActivity
